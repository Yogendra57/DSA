#include <iostream>
#include <vector>
#include <algorithm>
//What is Merge Sort?
/*
In merge sort the unsorted array is divided into two part either equal if it is even or either greater 
 part and smaller part till the array left only one element than compare the both element and merge in the
 sorted order than it comes to the previous process and do the same process. The merge sort is done by 
 recursion and back tracking and we know the recursion is return when base condition becomes true and 
 here the base condition is when the array has only element.
 This process can only done by the array indexing.
 */
using namespace std;
//Defining Merge
void merge(vector<int> &arr,int low,int mid, int high){
    vector<int> temp;
    int left=low;
    int right=mid+1;
    while(left<=mid && right<=high){
        if(arr[left] <=arr[right]){
            temp.push_back(arr[left]);
            left++;
        }
        else{
            temp.push_back(arr[right]);
            right++;
        }
    }
    while(left<=mid){
        temp.push_back(arr[left]);
        left++;
    }
    while(right<=high){
        temp.push_back(arr[right]);
        right++;
    }
    for(int i =low;i<=high;i++){
        arr[i]=temp[i-low];
    }
}
//Defining merge sorting
void ms(vector<int> &arr ,int low,int high){
    if(low==high) return;
    int mid= (low+high)/2;
    ms(arr,low,mid);
    ms(arr,mid+1,high);
    merge(arr,low,mid,high);
}
int main(){
    int n,high;
    cin>>n>>high;
    vector<int> arr(n);//defining array of size n
    for(int i=0;i<n;i++)cin>>arr[i];//inputing aray values
    ms(arr,0,high);//Calling Merge sort
    cout<<"Merge sort"<<endl; 
    //Printing Sorted array
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
    return 0;
}