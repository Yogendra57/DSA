#include<stdio.h>
#include<stdlib.h>
struct stack {
    int size;
    int top;
    int *arr;
};
int isEmpty(struct stack* ptr){
    if(ptr->top == -1){
        return 1;
    }
    else{
        return 0;
    }
    
}
int IsFull(struct stack* ptr){
    if(ptr->top == ptr->size-1){
        return 1;
    }
    else{
        return 0;
    }
}

int push(struct stack* ptr,int value){
    if(IsFull(ptr)){
        printf("stack overflow\n");
        return 0;
    }
    else{
        ptr->top++;
        ptr->arr[ptr->top]=value;
        printf("%d is push into the stack\n",value);
        return 1;
    }
}
int pop(struct stack* ptr){
    if(isEmpty(ptr)){
        printf("Stack underflow\n");
        return -1;
    }
    else{
        int value=ptr->arr[ptr->top];
        ptr->top=ptr->top-1;
        printf("%d is pop from the stack\n",value);
        return value;
    }
}
void printstack(struct stack* ptr){
    for(int i=0;i<=ptr->top;i++){
        printf("%d element in the stack is %d\n",i,ptr->arr[i]);
    }
}

int main(){
    struct stack *sp=(struct stack *)malloc(sizeof(struct stack));
    sp->size=4;
    sp->top=-1;
    sp->arr=(int*)malloc(sp->size*sizeof(int));
    push(sp,1);
    push(sp,2);
    push(sp,3);
    push(sp,4);
    printstack(sp);
    pop(sp);
    pop(sp);
    printstack(sp);
    
    return 0;
}